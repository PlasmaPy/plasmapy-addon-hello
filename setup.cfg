[metadata]
name = plasmapy-addon-hello
provides = plasmapy_addon_hello
author = PlasmaPy Community
author_email = plasmapy@googlegroups.com
description = Add-on package for the plasmapy package
long_description = file: README.md
long_description_content_type = text/markdown
license = BSD+Patent
license_file = licenses/LICENSE.md
url = https://www.plasmapy.org
edit_on_github = True
github_project = PlasmaPy/plasmapy-addon-hello
keywords=plasma physics, plasma, science, plasmapy
classifiers=
  Development Status :: 3 - Alpha
  Intended Audience :: Science/Research
  License :: OSI Approved :: BSD License
  Operating System :: OS Independent
  Programming Language :: Python :: 3
  Programming Language :: Python :: 3.6
  Programming Language :: Python :: 3.7
  Programming Language :: Python :: 3.8
  Programming Language :: Python :: Implementation :: CPython
  Topic :: Scientific/Engineering :: Physics
  Topic :: Scientific/Engineering :: Astronomy

[options]
python_requires = >=3.6
packages = find:
include_package_data = True
setup_requires =
  # PEP-518 encourages the use of pyproject.toml for defining
  # build dependencies...they should be defined under build-system.requires
install_requires =
  # ought to mirror requirements/install_requirements.txt
  plasmapy >= 0.3.2

[options.entry_points]
plasmapy.addons =
  hello = plasmapy_addon_hello
  say_hello =  plasmapy_addon_hello.main:hello

[options.extras_require]
all =
tests =
  # ought to mirror requirements/tests_requirements.txt
  pytest
  pytest-doctestplus
  pytest-cov
docs =
  # ought to mirror requirements/docs_requirements.txt
  sphinx
  sphinx-automodapi

[options.package_data]

[tool:pytest]
testpaths = "plasmapy-addon-hello" "docs"
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst

[coverage:run]
omit =
  ci-helpers/*
  */tests/*

[coverage:report]
exclude_lines =
  # Have to re-enable the standard pragma
  pragma: no cover
  # Don't complain about packages we have installed
  except ImportError
  # Don't complain if tests don't hit assertions
  raise AssertionError
  raise NotImplementedError
  # Don't complain about script hooks
  def main\(.*\):
  # Ignore branches that don't pertain to this version of Python
  pragma: py{ignore_python_version}
  # Don't complain about IPython completion helper
  def _ipython_key_completions_

[pycodestyle]
# E101 - mix of tabs and spaces
# W191 - use of tabs
# W291 - trailing whitespace
# W292 - no newline at end of file
# W293 - trailing whitespace
# W391 - blank line at end of file
# E111 - 4 spaces per indentation level
# E112 - 4 spaces per indentation level
# E113 - 4 spaces per indentation level
# E901 - SyntaxError or IndentationError
# E902 - IOError
# select = E226,E241,E242,E704,W504
exclude = version.py,build
max-line-length = 88

[pydocstyle]
# D302 is unnecessary as we are using Python 3.6+. Ignoring D202 allows blank
# lines to be put on either side of code "paragraphs" at the beginning of a
# function. D205 and D400 are ignored to allow the "one-liner" to exceed one
# line, which is sometimes necessary for even concise descriptions of plasma
# physics functions and classes.
convention = numpy
add-select = D402,D413
add-ignore = D202,D205,D302,D400,D105

[flake8]
# D302 is unnecessary as we are using Python 3.6+. Ignoring D202 allows blank
# lines to be put on either side of code "paragraphs" at the beginning of a
# function. D205 and D400 are ignored to allow the "one-liner" to exceed one
# line, which is sometimes necessary for even concise descriptions of plasma
# physics functions and classes.
convention = numpy
select = D402,D413
ignore = D202,D205,D302,D400,D105,D107,F401
exclude = extern,sphinx,*parsetab.py,conftest.py,docs/conf.py,setup.py
max-line-length = 88

[isort]
# Set sorting of imports to be consistent with black formatting
line_length=88
multi_line_output=3
include_trailing_comma: True
